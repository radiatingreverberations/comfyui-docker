name: Build and Push Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  DOCKER_REGISTRY_URL: ghcr.io/${{ github.repository_owner }}/

jobs:
  flash_attn:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - uses: Jimver/cuda-toolkit@v0.2.25
        with:
          cuda: "12.8.0"
          method: network
          sub-packages: '["nvcc"]'
      - name: Build Flash-Attention wheel
        env:
          PIP_CACHE_DIR: /home/runner/.cache/pip
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip setuptools wheel ninja packaging
          pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu128

          git clone --depth 1 https://github.com/Dao-AILab/flash-attention.git
          cd flash-attention

          MAX_JOBS=1 NVCC_THREADS=1 FLASH_ATTENTION_FORCE_BUILD=TRUE python setup.py bdist_wheel

      - uses: actions/upload-artifact@v4
        with:
          name: flash_attn
          path: flash-attention/dist/*.whl

  build:
    needs: flash_attn
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pre-create BuildKit volume on /mnt
        run: |
          sudo mkdir -p /mnt/buildkit-state
          sudo docker volume create \
            --driver local \
            --opt type=none \
            --opt device=/mnt/buildkit-state \
            --opt o=bind \
            buildx_buildkit_ci0_state

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          name: ci
          driver: docker-container
          use: true

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/bake-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
