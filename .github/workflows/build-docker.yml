name: Build and Push Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: comfyui

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout ComfyUI repository
        uses: actions/checkout@v4
        with:
          repository: comfyanonymous/ComfyUI
          ref: master
          path: comfyui

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: |
          python -m venv comfyui/venv
          . comfyui/venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu128 && \
          pip install huggingface_hub[cli] huggingface_hub[hf_transfer]
          pip install -r comfyui/requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check disk space
        run: df -h

      - name: Prepare build cache directory
        run: |
          sudo mkdir -p /mnt/buildx-cache
          sudo chown $USER:$USER /mnt/buildx-cache

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug - List workspace contents
        run: |
          ls -la
          ls -la comfyui/ || echo "comfyui directory not found"

      - name: Build and push Docker images
        uses: docker/bake-action@v6
        with:
          files: |
            ./docker-bake.hcl
          targets: |
            comfyui-base
          push: ${{ github.event_name != 'pull_request' }}
          set: |
            *.platform=linux/amd64
            *.cache-from=type=local,src=/mnt/buildx-cache
            *.cache-to=type=local,dest=/mnt/buildx-cache
