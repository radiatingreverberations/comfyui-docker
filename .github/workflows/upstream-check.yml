name: Rebuild on upstream changes

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  check-upstream:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.compare.outputs.changed }}
      upstream_sha: ${{ steps.upstream.outputs.sha }}

    steps:
      - name: Install skopeo + jq + gh
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y skopeo jq gh

      - name: Get HEAD of upstream master
        id: upstream
        run: |
          sha=$(git ls-remote https://github.com/comfyanonymous/ComfyUI.git \
                      refs/heads/master | cut -f1)
          echo "sha=$sha" >>"$GITHUB_OUTPUT"

      - name: Get comfyui.sha label from latest built image
        id: current
        run: |
          image="ghcr.io/${{ github.repository_owner }}/comfyui:master"
          if skopeo inspect docker://"$image" >/dev/null 2>&1; then
            last=$(skopeo inspect docker://"$image" \
                     | jq -r '.Labels["comfyui.sha"] // empty')
          else
            last=""        # tag doesn't exist
          fi
          echo "sha=$last" >>"$GITHUB_OUTPUT"

      - name: Check if a main-branch image build is already running
        id: busy
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail

          # This is the *orchestrator* workflow that actually pushes images
          wf="push-main.yml"
          api="repos/$REPO/actions/workflows/$wf/runs"

          # Count runs for branch=main that are still active (queued or in-progress)
          runs=$(gh api "$api" -F branch=main -F status=in_progress --jq '.total_count' || echo 0)
          queued=$(gh api "$api" -F branch=main -F status=queued      --jq '.total_count' || echo 0)

          if [ "$runs" -gt 0 ] || [ "$queued" -gt 0 ]; then
            echo "busy=true"  >>"$GITHUB_OUTPUT"
          else
            echo "busy=false" >>"$GITHUB_OUTPUT"
          fi

      - name: Decide whether to rebuild
        id: compare
        run: |
          if [ -n "${{ steps.current.outputs.sha }}" ] && \
             [ "${{ steps.upstream.outputs.sha }}" != "${{ steps.current.outputs.sha }}" ] && \
             [ "${{ steps.busy.outputs.busy }}" = "false" ]; then
            echo "changed=true"  >>"$GITHUB_OUTPUT"
          else
            echo "changed=false" >>"$GITHUB_OUTPUT"
          fi

  trigger-build-workflow:
    needs: check-upstream
    if: needs.check-upstream.outputs.changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch the build workflow
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo gh workflow run trigger-builds-on-new-local-commits.yml -f ref=main
