FROM comfyui-extensions

# Cache-busting marker for baking an SSH host key; updated via workflow when secret changes
ARG HOST_KEY_VERSION=0

# Install OpenSSH server
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    openssh-server curl rsync \
    && rm -rf /var/lib/apt/lists/*

# Optional: bake a pinned SSH host key into the image via BuildKit secret
RUN --mount=type=secret,id=SSH_HOST_ED25519_KEY_B64,required=false bash -euo pipefail <<'EOF'
echo "[ssh] Host key version marker: ${HOST_KEY_VERSION}" > /dev/null
umask 077
if [ -s /run/secrets/SSH_HOST_ED25519_KEY_B64 ]; then
    base64 -d /run/secrets/SSH_HOST_ED25519_KEY_B64 > /etc/ssh/ssh_host_ed25519_key || { echo "[ssh] Failed to decode base64 host key" >&2; exit 1; }
fi
if [ -f /etc/ssh/ssh_host_ed25519_key ]; then
    chown root:root /etc/ssh/ssh_host_ed25519_key
    chmod 600 /etc/ssh/ssh_host_ed25519_key
    if ! ssh-keygen -y -f /etc/ssh/ssh_host_ed25519_key > /etc/ssh/ssh_host_ed25519_key.pub 2>/dev/null; then
        echo "[ssh] Provided host key is invalid or unreadable" >&2; exit 1
    fi
    # Derive SHA256 fingerprint (fallback without -E if unavailable)
    FPR=""
    FPR=$(ssh-keygen -l -E sha256 -f /etc/ssh/ssh_host_ed25519_key 2>/dev/null | awk '{print $2}') || true
    if [ -z "$FPR" ]; then
        FPR=$(ssh-keygen -l -f /etc/ssh/ssh_host_ed25519_key 2>/dev/null | awk '{print $2}') || true
    fi
    HEAD_LINE=$(head -1 /etc/ssh/ssh_host_ed25519_key 2>/dev/null || true)
    SIZE=$(stat -c%s /etc/ssh/ssh_host_ed25519_key 2>/dev/null || echo 0)
    echo "[ssh] Baked SSH host key fingerprint: ${FPR:-<none>}"
    echo "[ssh] Key file first line: $HEAD_LINE (size ${SIZE} bytes)"
else
    echo "[ssh] No SSH host key secret provided; host key will be generated at runtime."
fi
EOF

# SSH server listens to port 2222
EXPOSE 2222

# Provide downloader script in PATH
COPY download_workflow_models.py /usr/local/bin/download_workflow_models.py
RUN sed -i 's/\r$//' /usr/local/bin/download_workflow_models.py && chmod +x /usr/local/bin/download_workflow_models.py

# Add entrypoint script
COPY entrypoint.ssh.sh entrypoint.ssh.sh
RUN sed -i 's/\r$//' entrypoint.ssh.sh
RUN chmod +x entrypoint.ssh.sh

# If this is not set, a random username will be generated
ENV SSH_USER=""

# Override the entrypoint script to start the SSH server
ENTRYPOINT ["./entrypoint.ssh.sh"]