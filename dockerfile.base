ARG NVIDIA_BASE_IMAGE=12.8.1-runtime-ubuntu24.04
FROM nvidia/cuda:${NVIDIA_BASE_IMAGE}

# Allow cache invalidation of APT
ARG REFRESH_APT=0

# Install required native dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3.12 python3.12-dev build-essential libgl1 libglib2.0-0 libgthread-2.0-0 libgtk-3-0 \
    && ln -s /usr/bin/python3.12 /usr/bin/python \
    && rm -rf /var/lib/apt/lists/*

# Install uv
ADD https://github.com/astral-sh/uv/releases/download/0.7.16/uv-x86_64-unknown-linux-gnu.tar.gz /tmp/uv.tar.gz
RUN tar -xzf /tmp/uv.tar.gz --strip-components=1 && \
    mv uv /usr/local/bin/uv && \
    rm -rf /tmp/uv.tar.gz

# Configure uv cache to work with Docker BuildKit cache
ENV UV_CACHE_DIR=/cache/uv
ENV UV_LINK_MODE=copy

# Set app dir
WORKDIR /comfyui

# Prepare the virtual environment
RUN uv venv venv

# Install pytorch
ARG TORCH_VERSION=2.8.0
ARG TORCH_CHANNEL=/test
ARG TORCH_CUDA_VERSION=cu128
RUN --mount=type=cache,target=/cache/uv,sharing=locked \
    . venv/bin/activate && \
    uv pip install torch==${TORCH_VERSION} torchvision torchaudio torchsde --extra-index-url https://download.pytorch.org/whl${TORCH_CHANNEL}/${TORCH_CUDA_VERSION}

# Install other common dependencies that are typically not ComfyUI version specific
RUN --mount=type=cache,target=/cache/uv,sharing=locked \
    . venv/bin/activate && \
    uv pip install \
    einops \
    tokenizers \
    sentencepiece \
    safetensors \
    pyyaml \
    pillow \
    scipy \
    tqdm \
    psutil \
    kornia \
    spandrel \
    soundfile

# Additional dependencies not strictly required by ComfyUI
RUN --mount=type=cache,target=/cache/uv,sharing=locked \
    . venv/bin/activate && \
    uv pip install \
    huggingface_hub[cli] \
    huggingface_hub[hf_transfer] \
    sageattention

# Allow cache invalidation of ComfyUI version even if the ref has not changed
ARG REFRESH_COMFYUI=0

# Install ComfyUI
ARG COMFYUI_VERSION=refs/heads/master
ADD https://github.com/comfyanonymous/ComfyUI/archive/${COMFYUI_VERSION}.tar.gz /tmp/comfyui.tar.gz
RUN mkdir -p /comfyui && \
    tar -xzf /tmp/comfyui.tar.gz -C /comfyui --strip-components=1 && \
    rm -rf /tmp/comfyui.tar.gz

# Install remaining ComfyUI version specific dependencies
RUN --mount=type=cache,target=/cache/uv,sharing=locked \
    . venv/bin/activate && \
    uv pip install -r requirements.txt

# ComfyUI defaults to port 8188
EXPOSE 8188

# Add entrypoint script
COPY entrypoint.base.sh entrypoint.base.sh
RUN sed -i 's/\r$//' entrypoint.base.sh
RUN chmod +x entrypoint.base.sh

ENTRYPOINT ["./entrypoint.base.sh"]
